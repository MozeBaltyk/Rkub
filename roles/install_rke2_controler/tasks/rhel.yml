# For RHEL >= 8 as root
- block:
  - name: Create etcd group
    ansible.builtin.group:
      name: etcd
      state: present

  - name: Create etcd user
    ansible.builtin.user:
      name: etcd
      comment: "etcd user"
      shell: /sbin/nologin
      system: yes
      createhome: false

  - name: Create directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      recurse: true
      mode: '0750'
    with_items:
      - /etc/rancher/rke2/
      - /var/lib/rancher/rke2/server/manifests/
      - /var/lib/rancher/rke2/agent/images

  - name: Configure RKE2 config.yaml
    ansible.builtin.template:
      src: config.yaml.j2
      dest: /etc/rancher/rke2/config.yaml

  - name: Set up audit policy file
    ansible.builtin.copy:
      content: |
        apiVersion: audit.k8s.io/v1
        kind: Policy
        rules:
        - level: RequestResponse
      dest: /etc/rancher/rke2/audit-policy.yaml

  - name: Set up ssl passthrough for nginx
    ansible.builtin.copy:
      content: |
        apiVersion: helm.cattle.io/v1
        kind: HelmChartConfig
        metadata:
          name: rke2-ingress-nginx
          namespace: kube-system
        spec:
          valuesContent: |-
            controller:
              config:
                use-forwarded-headers: true
              extraArgs:
                enable-ssl-passthrough: true
      dest: /var/lib/rancher/rke2/server/manifests/rke2-ingress-nginx-config.yaml

  - name: Install RKE2 server node
    ansible.builtin.shell:
      cmd: "INSTALL_RKE2_ARTIFACT_PATH={{ airgap_rke2_path }} INSTALL_RKE2_TYPE=server sh {{ airgap_rke2_path }}/install.sh"
      chdir: "{{ airgap_rke2_path }}"
    register: install_server_output
    failed_when: false

  - ansible.builtin.debug:
      var: install_server_output #['stdout_lines']

  - name: Wait for RKE2 to start
    ansible.builtin.wait_for:
      timeout: 10

  - name: Import a key from a file
    ansible.builtin.rpm_key:
      state: present
      key: "{{ airgap_rke2_path }}/public.key"

  - name: Install RKE2 selinux packages (dependency for RKE2 common)
    ansible.builtin.dnf:
      name: "{{ airgap_rke2_selinux_rpm_path }}"
      state: present

  - name: Install RKE2 common packages
    ansible.builtin.dnf:
      name: "{{ airgap_rke2_common_rpm_path }}"
      state: present

  - name: Create symlink for containerd.sock
    ansible.builtin.file:
      src: /var/run/k3s/containerd/containerd.sock
      dest: /var/run/containerd/containerd.sock
      state: link

  - name: Update .bashrc
    ansible.builtin.blockinfile:
      path: ~/.bashrc
      block: |
          export KUBECONFIG=/etc/rancher/rke2/rke2.yaml 
          export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml 
          PATH=$PATH:/var/lib/rancher/rke2/bin"
      marker: "# {mark} ANSIBLE install_rke2_controler"

  - name: Mask RKE2 agent service on the first server
    ansible.builtin.systemd:
      name: "rke2-agent.service"
      enabled: false
      masked: true

  - name: Start and enable rke2-server
    ansible.builtin.systemd:
      name: rke2-server.service
      state: started
      enabled: yes
    notify: "Service (re)started"

  - name: Wait for k8s apiserver
    ansible.builtin.wait_for:
      host: localhost
      port: "6443"
      state: present
      timeout: 300

  become: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version | int >= 8
