## List images 
- name: Rancher List - Download rancher-images.txt
  ansible.builtin.get_url:
    url: "https://github.com/rancher/rancher/releases/download/v{{ RANCHER_VERSION }}/rancher-images.txt"
    dest: "{{ directory_package }}/images/rancher/orig_rancher-images.txt"

- name: Rancher List - Fix 1 Library tags
  ansible.builtin.lineinfile:
    path: "{{ directory_package }}/images/rancher/orig_rancher-images.txt"
    regexp: '^(.*)busybox(.*)$'
    line: '\1library\/busybox\2'
    firstmatch: yes
    backrefs: yes

- name: Rancher List - Fix 2 Library tags
  ansible.builtin.lineinfile:
    path: "{{ directory_package }}/images/rancher/orig_rancher-images.txt"
    regexp: '^(.*)registry(.*)$'
    line: '\1library\/registry\2'
    firstmatch: yes
    backrefs: yes

- name: Rancher List - Remove things that are not needed and overlapped
  ansible.builtin.lineinfile:
    path: "{{ directory_package }}/images/rancher/orig_rancher-images.txt"
    regexp: '^(.*)neuvector|minio|gke|aks|eks|sriov|harvester|mirrored|longhorn|thanos|tekton|istio|multus|hyper|jenkins|windows(.*)$'
    state: absent

# this one could be probably improved
- name: Rancher List - Get latest version
  ansible.builtin.shell: |
    for i in $(cat {{ directory_package }}/images/rancher/orig_rancher-images.txt|awk -F: '{print $1}'); do
    grep -w $i {{ directory_package }}/images/rancher/orig_rancher-images.txt | sort -Vr| head -1 >> {{ directory_package }}/images/rancher/version_unsorted.txt;
    done

- name: Rancher List - Final Sort
  ansible.builtin.shell: |
    cat {{ directory_package }}/images/rancher/version_unsorted.txt | sort -u > {{ directory_package }}/images/rancher/images.txt

- name: Longhorn List - Download longhorn-images.txt
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/longhorn/longhorn/v{{ LONGHORN_VERSION }}/deploy/longhorn-images.txt"
    dest: "{{ directory_package }}/images/longhorn/images.txt"

- name: Cert-manager List - helm template
  ansible.builtin.shell: |
    helm template {{ directory_package }}/helm/cert-manager-v{{ CERT_VERSION }}.tgz | awk '$1 ~ /image:/ {print $2}' | sed s/\"//g > {{ directory_package }}/images/cert/images.txt

- name: Neuvector List - helm template
  ansible.builtin.shell: |
    helm template {{ directory_package }}/helm/core-{{ NEU_VERSION }}.tgz | awk '$1 ~ /image:/ {print $2}' | sed -e 's/\"//g' > {{ directory_package }}/images/neuvector/images.txt

## Import images 
- name: Upload images from list ($2)
  ansible.builtin.shell: >
    for i in $(cat {{ item }}/images.txt); do
    if ( ! ls {{ item }}/$(echo $i| awk -F/ '{print $2}'|sed 's/:/_/g').tar > /dev/null); then
    skopeo copy docker://$i docker-archive:{{ item }}/$(echo $i| awk -F/ '{print $2}'|sed 's/:/_/g').tar:$(echo $i| awk -F/ '{print $2}');
    fi;
    done
  loop:
    - "{{ directory_package }}/images/rancher"
    - "{{ directory_package }}/images/longhorn"

- name: Upload images from list ($3)
  ansible.builtin.shell: >
    for i in $(cat {{ item }}/images.txt); do
    if ( ! ls {{ item }}/$(echo $i| awk -F/ '{print $3}'|sed 's/:/_/g').tar > /dev/null); then
    skopeo copy docker://$i docker-archive:{{ item }}/$(echo $i| awk -F/ '{print $3}'|sed 's/:/_/g').tar:$(echo $i| awk -F/ '{print $3}');
    fi;
    done
  loop:
    - "{{ directory_package }}/images/cert"
    - "{{ directory_package }}/images/neuvector"

- name: Upload registry image
  ansible.builtin.get_url:
    url: "https://github.com/clemenko/rke_airgap_install/raw/main/registry.tar"
    dest: "{{ directory_package }}/images/registry/registry.tar"
