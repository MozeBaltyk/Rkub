---
- name: Flush handlers now
  ansible.builtin.meta: flush_handlers

- name: Wait for k8s apiserver
  ansible.builtin.wait_for:
    host: localhost
    port: "5000"
    state: present
    timeout: 600

# Longhorn
- name: Find longhorn images on the target server
  ansible.builtin.find:
    paths: "{{ mount_images_path }}/longhorn/"
    patterns: "*.tar"
  register: found_images

- name: Copy longhorn images with skopeo
  ansible.builtin.command: "skopeo copy docker-archive:{{ item.path }} docker://localhost:5000/longhornio/{{ item.path | basename | regex_replace('.tar', '') | regex_replace('_', ':') }} --dest-tls-verify=false"
  changed_when: false
  with_items: "{{ found_images['files'] }}"

# Cert
- name: Find Cert-manager images on the target server
  ansible.builtin.find:
    paths: "{{ mount_images_path }}/cert/"
    patterns: "*.tar"
  register: found_images

- name: Copy Cert-manager images with skopeo
  ansible.builtin.command: "skopeo copy docker-archive:{{ item.path }} docker://localhost:5000/cert/{{ item.path | basename | regex_replace('.tar', '') | regex_replace('_', ':') }} --dest-tls-verify=false"
  changed_when: false
  with_items: "{{ found_images['files'] }}"

# Neuvector
- name: Find Neuvector images on the target server
  ansible.builtin.find:
    paths: "{{ mount_images_path }}/neuvector/"
    patterns: "*.tar"
  register: found_images

- name: Copy Neuvector images with skopeo
  ansible.builtin.command: "skopeo copy docker-archive:{{ item.path }} docker://localhost:5000/neuvector/{{ item.path | basename | regex_replace('.tar', '') | regex_replace('_', ':') }} --dest-tls-verify=false"
  changed_when: false
  with_items: "{{ found_images['files'] }}"

# Rancher
- name: Find Rancher images on the target server
  ansible.builtin.find:
    paths: "{{ mount_images_path }}/rancher/"
    patterns: "*.tar"
  register: found_images

- name: Copy Rancher images with skopeo
  ansible.builtin.command: "skopeo copy docker-archive:{{ item.path }} docker://localhost:5000/rancher/{{ item.path | basename | regex_replace('.tar', '') | regex_replace('_', ':') }} --dest-tls-verify=false"
  changed_when: false
  with_items: "{{ found_images['files'] }}"

# Result
- name: List docker registry
  ansible.builtin.shell:
    cmd: |
      set -o pipefail &&
      for i in $(curl -sk localhost:5000/v2/_catalog | jq -r '.repositories[]'); do
        for tag in $(curl -sk localhost:5000/v2/${i}/tags/list | jq -r '.tags[]'); do
          echo ${i}:${tag};
        done;
      done
    executable: /bin/bash
  register: docker
  changed_when: false

- name: Display Output
  ansible.builtin.debug:
    var: docker['stdout_lines']