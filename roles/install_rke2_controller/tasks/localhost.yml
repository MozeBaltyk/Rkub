---
# All tasks on ansible controller
# kubeconfig to localhost
- name: Fetch RKE2 kubeconfig to localhost
  ansible.builtin.fetch:
    src: "$HOME/.kube/{{ inventory_hostname }}.yaml"
    dest: "{{ rkub_local_kubeconfig }}"
    flat: true
    validate_checksum: true
  become_user: "{{ admin_user }}"
  become: true

# check kubecm is installed on your localhost
- name: Check if kubecm is installed on localhost
  delegate_to: localhost
  become: false
  block:
    - name: Check kubecm is installed (part of prerequisites)
      ansible.builtin.command: which kubecm
      register: is_installed
      changed_when: false
      failed_when: false

    - name: Add kubeconfig to kubecm
      when: is_installed.rc == 0
      block:
        - name: Test if context_name already exist in your kubeconfig.
          ansible.builtin.command: "kubecm list {{ rkub_context_name }} > /dev/null  2>&1"
          register: context_name_exist
          changed_when: false
          failed_when: false

        - name: Ensure .kube/config file exist
          ansible.builtin.stat:
            path: "$HOME/.kube/config"
          register: stat_result

        - name: Create kube/config, if it doesnt exist already
          ansible.builtin.file:
            path: "$HOME/.kube/config"
            state: touch
          when: not stat_result.stat.exists

        - name: Add to kubecm
          ansible.builtin.command: "kubecm add -cf {{ rkub_local_kubeconfig }} --context-name {{ rkub_context_name }}"
          changed_when: false
          when: context_name_exist.rc != 0

        - name: Switch to new cluster
          ansible.builtin.command: "kubecm switch {{ rkub_context_name }}"
          changed_when: false

      always:
        - name: Message to you
          ansible.builtin.debug:
            msg: "Kubeconfig was added to your kubecm."

    - name: No Kubecm
      when: is_installed.rc != 0
      block:
        - name: No Kubecm
          ansible.builtin.debug:
            msg: "Kubecm is not installed on your localhost! Not a big problem, but I did not add it to your local kubeconfig."

  always:
    - name: Message to you
      ansible.builtin.debug:
        msg: "Kubeconfig of this cluster was imported in your localhost in {{ rkub_local_kubeconfig }}"

# Check Flux to Kube API
- name: Check if flux 6443 is open between localhost and master
  delegate_to: localhost
  become: false
  block:
    - name: Check kube api
      ansible.builtin.uri:
        url: "https://{{ master }}:6443"
        validate_certs: false
        status_code: 401

  rescue:
    - name: Send fail message
      ansible.builtin.fail:
        msg: >
          "Something wrong in your network since localhost does not reach master on 6443"
