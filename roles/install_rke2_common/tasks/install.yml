---
# Prerequisites
- name: Ensure admin_user exist
  ansible.builtin.user:
    name: "{{ admin_user }}"
    comment: "rke2 user for administration"
    createhome: true

- name: Install common packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  with_items:
    - iptables
    - container-selinux
    - libnetfilter_conntrack
    - libnfnetlink
    - libnftnl
    - policycoreutils-python-utils
    - cryptsetup
  when:
    - ansible_pkg_mgr == 'dnf'
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version | int >= 8

- name: Create sysctl.conf from template
  ansible.builtin.template:
    src: rke2.conf
    dest: /etc/sysctl.d/rke2.conf
    mode: '0600'
  notify: Restart systemd-sysctl

# Prepare Dir
- name: Ensure data_dir exists
  ansible.builtin.file:
    path: "{{ rke2_data_dir }}"
    state: directory
    mode: "0640"

- name: Ensure dir /var/lib/rancher exists
  ansible.builtin.file:
    path: "/var/lib/rancher"
    state: directory
    mode: "0640"

- name: Create Symlink between rke2_data_dir and /var/lib/rancher/rke2
  ansible.builtin.file:
    src: "{{ rke2_data_dir }}"
    dest: /var/lib/rancher/rke2
    state: link
  when: rke2_data_dir != "/var/lib/rancher/rke2"

# NetworkManager config
- name: Specific config for NetworkManager
  become: true
  when:
    - ansible_facts['services']['NetworkManager.service'] is defined
  block:
    - name: Configure NetworkManager for RKE2 and Canal
      ansible.builtin.copy:
        content: |
          [keyfile]
          unmanaged-devices=interface-name:cali*;interface-name:flannel*
        dest: /etc/NetworkManager/conf.d/rke2-canal.conf
        mode: '0600'

    - name: Set rke2-canal.conf file permissions
      ansible.builtin.file:
        path: /etc/NetworkManager/conf.d/rke2-canal.conf
        mode: '0600'
        owner: root
        group: root

    - name: Reload NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: reloaded
      when:
        - ansible_facts['services']['NetworkManager.service']['state'] == "running"
