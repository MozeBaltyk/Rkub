---
name: Update Readme and Changelog
description: Update Readme and Changelog

runs:
  using: composite
  steps:
    # Update Readme 
    - shell: bash
      run: |
        rke2_version=$(yq -r .global_rke2_version playbooks/vars/main.yml)
        cert_version=$(yq -r .global_CERT_VERSION playbooks/vars/main.yml)
        rancher_version=$(yq -r .global_RANCHER_VERSION playbooks/vars/main.yml)
        longhorn_version=$(yq -r .global_LONGHORN_VERSION playbooks/vars/main.yml)
        neuvector_version=$(yq -r .global_NEU_VERSION playbooks/vars/main.yml)
        cat << EOF > version.txt
          - [RKE2 ${rke2_version}](https://docs.rke2.io) - Security focused Kubernetes
          - [Rancher ${rancher_version}](https://www.suse.com/products/suse-rancher/) - Multi-Cluster Kubernetes Management
          - [Longhorn ${longhorn_version}](https://longhorn.io) - Unified storage layer
          - [Neuvector ${neuvector_version}](https://neuvector.com/) - Kubernetes Security Platform
        EOF

        sed -i -n -e "1,/<\!-- Autogenerated -->/ p" -e"/<\!-- END -->/,$ p" -e "/<\!-- Autogenerated -->/ r version.txt" README.md

    # Update Changelog
    - shell: bash
      run: |
        date=$(date '+%Y-%m-%d')
        rkub_collection=$(yq -r .version galaxy.yml)
        rke2_version=$(yq -r .global_rke2_version playbooks/vars/main.yml)
        cert_version=$(yq -r .global_CERT_VERSION playbooks/vars/main.yml)
        rancher_version=$(yq -r .global_RANCHER_VERSION playbooks/vars/main.yml)
        longhorn_version=$(yq -r .global_LONGHORN_VERSION playbooks/vars/main.yml)
        neuvector_version=$(yq -r .global_NEU_VERSION playbooks/vars/main.yml)

        cat << EOF > version.txt
        ## ${rkub_collection} (${date})

        Versions:
          - rke2 version: ${rke2_version}
          - cert-manager version: ${cert_version}    
          - rancher version: ${rancher_version} 
          - longhorn version: ${longhorn_version}
          - neuvector version: ${neuvector_version}
        EOF

        sed -i -n -e "1,/<\!-- Release -->/ p" -e"/<\!-- End Release -->/,$ p" -e "/<\!-- Release -->/ r version.txt" CHANGELOG.md

    # Git push 
    - name: Set env.BRANCH
      run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

    - name: Is develop branch?
      if: env.BRANCH == 'develop'
      run: echo "This is 'develop' branch"

    - shell: bash
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add README.md CHANGELOG.md
        [[ -z $(git status -uno --porcelain) ]] && echo "No need to commit..." || git commit -m "âš¡ Update README & CHANGELOG"
        git push origin HEAD:$(echo $GITHUB_REF | cut -d'/' -f 3)